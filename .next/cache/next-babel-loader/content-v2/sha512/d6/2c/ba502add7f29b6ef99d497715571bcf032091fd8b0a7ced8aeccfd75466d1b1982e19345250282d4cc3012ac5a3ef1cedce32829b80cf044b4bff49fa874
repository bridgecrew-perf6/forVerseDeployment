{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\code23\\\\code\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head';\nimport { Fragment } from 'react';\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"All Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"description\",\n      content: \"Use shouldComponentUpdate() to let React know if a component's output is not affected by the current change in state or props. The default behavior is to re- ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, _this);\n}; // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n// export getStaticProps= async()=>{\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["F:/code23/code/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Head","Fragment","HomePage","props","meetups"],"mappings":";;;;;AACA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,OAAQC,IAAR,MAAkB,WAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAC,SAATA,QAAS,CAACC,KAAD,EAAS;AAGpB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUH,CAbD,C,CAgBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;KA9BMF,Q;;AAwDN,eAAeA,QAAf","sourcesContent":[" import {MongoClient} from 'mongodb';\r\nimport MeetupList from '../components/meetups/MeetupList'\r\nimport  Head from 'next/head';\r\nimport { Fragment } from 'react';\r\n\r\nconst HomePage=(props)=>{\r\n\r\n \r\n    return(\r\n      <Fragment>\r\n        <Head>\r\n          <title>All Meetups</title>\r\n        </Head>\r\n        <meta name=\"description\" content=\"Use shouldComponentUpdate() to let React know if a component's output is not affected by the current change in state or props. The default behavior is to re- ...\" />\r\n        <MeetupList meetups={props.meetups}/>\r\n      </Fragment>\r\n      \r\n    )\r\n}\r\n\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   };\r\n// }\r\n\r\n\r\n// export getStaticProps= async()=>{\r\n  export async function getStaticProps(){\r\n\r\n    const dbConnectionString= 'mongodb+srv://shashikumar_mango:mtvClustorOlu4135987@cluster0.zmeix.mongodb.net/Database01reactDecember?retryWrites=true&w=majority'\r\n\r\n    const connection = await MongoClient.connect(dbConnectionString);\r\n    const db = connection.db();\r\n    const meetupsCollection = db.collection('newCollection');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n    // console.log(meetups);\r\n\r\n    connection.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}