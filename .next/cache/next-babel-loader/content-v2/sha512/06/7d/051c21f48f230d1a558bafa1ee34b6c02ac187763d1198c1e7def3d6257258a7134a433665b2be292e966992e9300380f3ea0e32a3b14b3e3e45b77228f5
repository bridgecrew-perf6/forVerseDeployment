{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\code23\\\\code\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps(context) {\n  //fetching data for a single meetup\n  const meetupId = context.params.meetupId; // console.log(meetupId);\n\n  const dbConnectionString = 'mongodb+srv://shashikumar_mango:mtvClustorOlu4135987@cluster0.zmeix.mongodb.net/Database01reactDecember?retryWrites=true&w=majority';\n  const client = await MongoClient.connect(dbConnectionString);\n  const db = client.db();\n  const meetupsCollection = db.collection('newCollection');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const dbConnectionString = 'mongodb+srv://shashikumar_mango:mtvClustorOlu4135987@cluster0.zmeix.mongodb.net/Database01reactDecember?retryWrites=true&w=majority';\n  const connection = await MongoClient.connect(dbConnectionString);\n  const db = connection.db();\n  const collection = db.collection('newCollection');\n  const dataFetched = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  connection.close(); // console.log(dataFetched);\n\n  return {\n    fallback: false,\n    paths: dataFetched.map(data => ({\n      params: {\n        meetupId: data._id.toString()\n      }\n    }))\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["F:/code23/code/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address","getStaticProps","context","meetupId","params","dbConnectionString","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","id","toString","getStaticPaths","connection","dataFetched","find","toArray","fallback","paths","map","data"],"mappings":"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","sourcesContent":["import {MongoClient,ObjectId} from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupData.title}</title>\n        <meta name='description' content={props.meetupData.description}/>\n      </Head>\n      <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n    </Fragment>\n    \n  );\n}\n\n\n\n\nexport async function getStaticProps(context){\n  //fetching data for a single meetup\n  const meetupId = context.params.meetupId;\n  // console.log(meetupId);\n\n  const dbConnectionString= 'mongodb+srv://shashikumar_mango:mtvClustorOlu4135987@cluster0.zmeix.mongodb.net/Database01reactDecember?retryWrites=true&w=majority';\n\n\n  const client = await MongoClient.connect(dbConnectionString);\n  const db = client.db();\n\n  const meetupsCollection = db.collection('newCollection');\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props:{\n      meetupData:{\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    }\n  }\n}\n\nexport async function getStaticPaths(){\n  const dbConnectionString= 'mongodb+srv://shashikumar_mango:mtvClustorOlu4135987@cluster0.zmeix.mongodb.net/Database01reactDecember?retryWrites=true&w=majority';\n\n\n  const connection = await MongoClient.connect(dbConnectionString);\n  const db= connection.db();\n\n  const collection = db.collection('newCollection');\n  const dataFetched= await collection.find({},{_id:1}).toArray();\n\n  connection.close();\n  // console.log(dataFetched);\n  return {\n    fallback:false,\n    paths: dataFetched.map(data=>({params:{meetupId:data._id.toString()}}))\n  };\n\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}